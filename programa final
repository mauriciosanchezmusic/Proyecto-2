///main

#include <iostream>
#include <fstream> //archivos
#include <stdio.h> //string
#include "Atributos/Funcion.h"
#include "Atributos/Pelicula.h"

using namespace std;

bool buscarActor(int arr[], Actor actoresOrigi[], Actor actoresConvert[])
{
  for (int i=0;i<10;i++)
  {
      for (int j=0;j<20;j++)
      {
        if (arr[i]==actoresOrigi[j].getId())
        {
          actoresConvert[i].setId(actoresOrigi[j].getId());
          actoresConvert[i].setNombre(actoresOrigi[j].getNombre());
        }
        else if (arr[i]==0)
        {
          return false;
        }
      }
  }
  return true;
}



int main() 
{
  ifstream entraFilmes, entraPersonajes;
  int idActor;
  string nombreActor;
  int numPeli, anioPeli, duracionPeli, cantiActPeli;
  int listActPeli[10]={0,0,0,0,0,0,0,0,0,0};
  string generoPeli, tituloPeli;
  int numFunciones;
  string claveFuncion;
  int numerodePeli=0, sala, horitas=1, minutitos=1;
  char opcion;
  bool continuar=true, error=false ;
  bool a[10]={true,true,true,true,true,true,true,true,true,true};
  int suma=0;
  int horaUsuario=0, minutosUsuario=0;
  string clavFuncionUsuario;
  int idUsuario;

  Actor arrActor[20];
  Pelicula arrPelicula[20];
  Funcion arrFuncion[20];
  Actor actoresConvertidos[10];
  Hora hours(0,0);//clear
  
  

  entraPersonajes.open("TEXTOS/protagonistas.txt");
  for (int i=0; !entraPersonajes.eof(); i++)
  {
    entraPersonajes>>idActor;
    getline(entraPersonajes, nombreActor);
    arrActor[i].setId(idActor);
    arrActor[i].setNombre(nombreActor);
  }
  entraPersonajes.close();
 
  entraFilmes.open("TEXTOS/filmes.txt");
  for (int j=0; !entraFilmes.eof(); j++)
  {
    entraFilmes>>numPeli>>anioPeli>>duracionPeli>>generoPeli>>cantiActPeli;
    switch (cantiActPeli)
    {
      case 1: entraFilmes>>listActPeli[0]; break;
      case 2: entraFilmes>>listActPeli[0]>>listActPeli[1]; break;
      case 3: entraFilmes>>listActPeli[0]>>listActPeli[1]>>listActPeli[2]; break;
      case 4: entraFilmes>>listActPeli[0]>>listActPeli[1]>>listActPeli[2]>>listActPeli[3]; break;
      case 5: entraFilmes>>listActPeli[0]>>listActPeli[1]>>listActPeli[2]>>listActPeli[3]>>listActPeli[4]; break;
      case 6: entraFilmes>>listActPeli[0]>>listActPeli[1]>>listActPeli[2]>>listActPeli[3]>>listActPeli[4]>>listActPeli[5]; break;
      case 7: entraFilmes>>listActPeli[0]>>listActPeli[1]>>listActPeli[2]>>listActPeli[3]>>listActPeli[4]>>listActPeli[5]>>listActPeli[6]; break;
      case 8: entraFilmes>>listActPeli[0]>>listActPeli[1]>>listActPeli[2]>>listActPeli[3]>>listActPeli[4]>>listActPeli[5]>>listActPeli[6]>>listActPeli[7]; break;
      case 9: entraFilmes>>listActPeli[0]>>listActPeli[1]>>listActPeli[2]>>listActPeli[3]>>listActPeli[4]>>listActPeli[5]>>listActPeli[6]>>listActPeli[7]>>listActPeli[8]; break;
      case 10: entraFilmes>>listActPeli[0]>>listActPeli[1]>>listActPeli[2]>>listActPeli[3]>>listActPeli[4]>>listActPeli[5]>>listActPeli[6]>>listActPeli[7]>>listActPeli[8]>>listActPeli[9]; break;
      default: cout <<"ERROR"<<endl;
    };
    getline(entraFilmes, tituloPeli);
    arrPelicula[j].setNumPeli(numPeli);
    arrPelicula[j].setAnio(anioPeli);
    arrPelicula[j].setDuracion(duracionPeli);
    arrPelicula[j].setGenero(generoPeli);
    arrPelicula[j].setTitulo(tituloPeli);
    
    buscarActor(listActPeli, arrActor, actoresConvertidos);   

    for (int p=0; p<10;p++)
    {
        if (arrPelicula[j].addListaActores(actoresConvertidos[p])==false) 
        {
          a[p]=false;
        }
        else
        {
          a[p]=true;
        }
    } 

    for (int o=0; o<10;o++)
    {  
              if (a[o]==true)
                {
                  suma=suma+1;
                }
    }

    if (suma==10)
    {
    cout<<"Actores de la pelicula "<< arrPelicula[j].getTitulo()<< " agregados de manera exitosa"<<endl;
    }
    else 
    {
    cout<<"Error, no todos los actores pudieron ser agregados de manera exitosa. Verifica la pelicula: "<< arrPelicula[j].getTitulo()<<endl;
    }

    for(int i=0;i<10;i++)
    {
      listActPeli[i]=0;
      actoresConvertidos[i].setNombre("Default");
      actoresConvertidos[i].setId(0);
      a[i]=true;
      suma=0;
    }

  }

  entraFilmes.close();

  do 
  {

      for (int y=0;y<20;y++)//limpiar
      {
        arrFuncion[y].setHora(hours);
        arrFuncion[y].setSala(0);
        arrFuncion[y].setNumPeli(0);
        arrFuncion[y].setCveFuncion("Default");
      }
      error=false;

      do 
      {
          cout <<"Cuantas funciones hay disponibles hoy? (Max 20)"<<endl;
          cin>>numFunciones;
      } while (numFunciones<0||numFunciones>20);
      for (int k=0; k<numFunciones;k++)
      {
      cout <<"Teclea los datos de la funcion numero "<< (k+1) <<endl;
      cout <<"Clave de la funcion(No repetir): ";cin >> claveFuncion;
      do {
      cout << "Numero de la Pelicula(No repetir): ";cin >> numerodePeli;
        } while (numerodePeli<=0);
      cout <<"Sala: ";cin >>sala;

      do{
      if (horitas<0||horitas>=24||minutitos<0||minutitos>=60)
      {
        cout<<"Hora invalida, intente denuevo"<<endl;
      }
      cout <<"Hora: ";cin >>horitas;
      cout<<"Minutos: ";cin>>minutitos;
      } while(horitas<0||horitas>=24||minutitos<0||minutitos>=60);



      Hora horrores(horitas,minutitos);

      for (int l=0;l<20;l++)
      {
              if (numerodePeli!=arrFuncion[l].getNumPeli()&&claveFuncion!=arrFuncion[l].getCveFuncion())
              {
              arrFuncion[k].setCveFuncion(claveFuncion);
              arrFuncion[k].setNumPeli(numerodePeli);
              arrFuncion[k].setSala(sala);
              arrFuncion[k].setHora(horrores);
              l=19;
              }
              else //if(numerodePeli==arrFuncion[l].getNumPeli())
              {
                cout<<"Error, funciones duplicadas intenta denuevo"<<endl;
                arrFuncion[k].setNumPeli(0);
                arrFuncion[k].setCveFuncion("Default");
                error=true;
              }
      }

      claveFuncion="Default";
      numerodePeli=0;
      sala=0;
      horitas=1;
      minutitos=1;
      }
  } while(error==true);
 

    cout <<"Bienvenido a CineMasMauricio"<<endl;
  do
  {
    cout <<"Que operacion desea hacer?"<<endl;
    cout <<"(A) Consulta a los actores de las peliculas" <<endl;
    cout<< "(B) Consulta de todas las películas" <<endl;
    cout<< "(C) Consulta de todas las funciones disponibles"<<endl;
    cout<< "(D) Consulta de funciones por hora" <<endl;
    cout<< "(E) Consulta por clave de función" <<endl;
    cout<< "(F) Consulta de películas en las que participa un actor" <<endl;
    cout<< "(G) Salir"<<endl;

    cin>>opcion;

    if (opcion=='a' ||opcion=='A')
    {
      cout << "Id.    Nombre:"<<endl;
      for (int y=0;y<20;y++)
      {
        if (arrActor[y].getNombre()!="Default")
        {
        cout <<arrActor[y].getId() << " "<<arrActor[y].getNombre()<<endl;
        }
        else 
        {
          y=19;
        }
      }
      
      continuar=true;
    }

    else if (opcion=='b' ||opcion=='B')
    {
      cout << "Titulo \t\t\t\t\t\t Anio \t Duracion(minutos) \t Genero \t Actores"<<endl;
      for (int y=0;y<20;y++)
      {
        if (arrPelicula[y].getTitulo()!="Default")
       { 
            cout<<arrPelicula[y].getTitulo()<<"\t"<<arrPelicula[y].getAnio()<<"\t "<<arrPelicula[y].getDuracion()<<"\t "<<arrPelicula[y].getGenero()<<"\t ";
            for (int x=0;x<10;x++)
            {
            if (arrPelicula[y].getListaActores(x).getNombre()!="Default")
            cout << arrPelicula[y].getListaActores(x).getNombre();
            }
            cout <<endl;
       }
       else
       {
         y=19;
       }
      }

      
      continuar=true;

    }

    else if (opcion=='c' ||opcion=='C')
    {
      for (int y=0;y<20;y++)
      {
          for(int x=0;x<20;x++)
            {
                  if (arrFuncion[y].getNumPeli()==arrPelicula[x].getNumPeli()&& arrFuncion[y].getNumPeli()!=0)
                  {
                    cout << "Clave Función\t sala\t hora\t Nombre película"<<endl;
                    cout <<"\t"<<arrFuncion[y].getCveFuncion()<<"\t\t\t\t";
                    cout <<arrFuncion[y].getSala()<<"\t";
                    cout<<arrFuncion[y].getHora().getH()<<":"<<arrFuncion[y].getHora().getM()<<"\t";
                    cout<<arrPelicula[x].getTitulo()<<endl;
                    x=19;
                    error=false;
                  }
                  else 
                  {
                    error=true;
                  }
            }
      }

      if (error==true)
      { 
        cout <<"Error, pelicula no encontrada"<<endl;
      }
      
      continuar=true;
      error=false;

    }

    else if (opcion=='d' ||opcion=='d')
    { 
      do {
      cout <<"teclea la hora: ";
      cin >>horaUsuario;
      } while (horaUsuario<0 ||horaUsuario>23);
      do {
      cout << "teclea los minutos: ";
      cin >>minutosUsuario;
      } while (minutosUsuario<0 ||minutosUsuario>59);

      cout << "Sala: \t Pelicula:"<<endl;
      for (int x=0;x<20;x++)
      {
        if ((arrFuncion[x].getHora().getH()==horaUsuario) && (arrFuncion[x].getHora().getM()==minutosUsuario))
        { 
          for (int y=0;y<20;y++)
          {
              if (arrPelicula[y].getNumPeli()==arrFuncion[x].getNumPeli())
              {
                cout << arrFuncion[x].getSala()<<"\t";
                cout << arrPelicula[y].getTitulo()<<endl;
                y=19;
              }
          }
        }
      }
      continuar=true;

    }

    else if (opcion=='e' ||opcion=='E')
    {
      do {
      error=false;
      cout << "Escribe la clave de la funcion:  ";
      cin>>clavFuncionUsuario;
      for (int x=0;x<20;x++)
      {
        if (clavFuncionUsuario==arrFuncion[x].getCveFuncion())
        error=true;

      }
      } while (error==false);

      error=false;

      cout <<"Sala:  Hora:   Pelicula\t\t Actores:"<<endl;
      for (int g=0;g<20;g++) 
      {
          if (clavFuncionUsuario==arrFuncion[g].getCveFuncion())
          {
            for (int h=0;h<20;h++)
            {
              if (arrFuncion[g].getNumPeli()==arrPelicula[h].getNumPeli())
              {
                cout<<arrFuncion[g].getSala()<<"\t";
                cout<<arrFuncion[g].getHora().getH()<<":"<<arrFuncion[g].getHora().getM()<<"\t";
                cout<<arrPelicula[h].getTitulo()<<"\t";
                cout<<arrPelicula[h].getDuracion()<<"\t";
                cout<<arrPelicula[h].getGenero()<<"\t";
                for (int e=0;e<10;e++)
                {
                  
                  if (arrPelicula[h].getListaActores(e).getNombre()!="Default")
                  cout<<arrPelicula[h].getListaActores(e).getNombre();
                }
                cout <<endl;

            }
          
          }

        }
      } 
      continuar=true;

      
    }

    else if (opcion=='f' ||opcion=='F')
    {
      do 
      {
        error=false;
        cout <<"Teclee el Id del actor: ";
        cin>>idUsuario;
        for (int r=0;r<20;r++)
        {
          if (idUsuario==arrActor[r].getId())
        error=true;
        }
      } while (error==false);
      

      for (int c=0;c<20;c++)
      {
        if (idUsuario==arrActor[c].getId())
        {
         for (int v=0;v<20;v++)
         {
           for (int x=0;x<10;x++)
           {
              if (arrActor[c].getNombre()==arrPelicula[v].getListaActores(x).getNombre())
              {
                cout <<arrActor[c].getNombre()<<"\t";
                cout<<arrPelicula[v].getTitulo()<<"\t";
                cout<<arrPelicula[v].getAnio();
                cout <<endl;
              }
           }
           
         }


        }
      }

      
      continuar=true;

      
    }

    else if (opcion=='g' ||opcion=='G')
    {
      cout<<"Hasta pronto"<<endl;
      continuar=false;
    }
    else
    {
      cout <<"Letra invalida, intente denuevo"<<endl;
      continuar=true;
    }

  }while(continuar==true);





  return 0;
}

///Actor.h

#include <iostream>
#include <stdio.h>


using namespace std;

class Actor
{
    private:
      int id;
      string nombre;

    public:
        Actor();
        Actor (int, string);
        ~Actor();
        void setId(int);
        int getId();
        void setNombre(string);
        string getNombre();
};

Actor::Actor()
{
  id= 00;
  nombre = "Default";
}

Actor::Actor (int _id, string _nombre)
{
  id=_id;
  nombre=_nombre;
}

Actor::~Actor(){
}

void Actor::setId(int __id)
{
  id=__id;
}
int Actor::getId()
{
  return id;
}

void Actor::setNombre(string __nombre)
{
  nombre=__nombre;
}
string Actor::getNombre()
{
  return nombre;
}


////Funcion.h

#include <iostream>
#include <stdio.h>
#include "Hora.h"

using namespace std;

class Funcion
{
  private:
      string cveFuncion;
      int numPeli;
      int sala;
      Hora hora;

  public:
      Funcion();
      Funcion(string, int, int, Hora);
      ~Funcion();
      void setCveFuncion(string);
      string getCveFuncion();
      void setNumPeli(int);
      int getNumPeli();
      void setSala(int);
      int getSala();
      void setHora(Hora);
      Hora getHora();
};

Funcion::Funcion()
{
  cveFuncion="Default";
  numPeli=00;
  sala=00;
  Hora a(00,00);
  hora=a;
}

Funcion::Funcion(string _cveFuncion, int _numPeli, int _sala, Hora _hora)
{
  cveFuncion=_cveFuncion;
  numPeli=_numPeli;
  sala=_sala;
  hora=_hora;
}

Funcion::~Funcion(){
}

void Funcion::setCveFuncion(string __cveFuncion)
{
  cveFuncion=__cveFuncion;
}
string Funcion::getCveFuncion()
{
  return cveFuncion;
}

void Funcion::setNumPeli(int __numPeli)
{
  numPeli=__numPeli;
}
int Funcion::getNumPeli()
{
  return numPeli;
}

void Funcion::setSala(int __sala)
{
  sala=__sala;
}
int Funcion::getSala()
{
  return sala;
}

void Funcion::setHora(Hora __hora)
{
  hora=__hora;
}
Hora Funcion::getHora()
{
  return hora;
}



///Hora.h


#include <iostream>

using namespace std;

class Hora
{
  private:
      int hh;
      int mm;

  public:
      Hora();
      Hora(int, int);
      ~Hora();
      void setH(int);
      int getH();
      void setM(int);
      int getM();
};


Hora::Hora()
{
  hh=00;
  mm=00;
}

Hora::Hora(int _hh, int _mm)
{
  hh=_hh;
  mm=_mm;
}

Hora::~Hora(){
}

void Hora::setH(int __h)
{
  hh=__h;
}
int Hora::getH()
{
  return hh;
}

void Hora::setM(int __m)
{
  mm=__m;
}
int Hora::getM()
{
  return mm;
}



//Pelicula.h


#include <iostream>
#include <stdio.h>
#include "Actor.h"


using namespace std;

class Pelicula
{
  private:
    int numPeli;
    string titulo;
    int anio;
    int duracion;
    string genero;
    int cantActores;
    Actor listaActores[10];

  public:
    Pelicula();
    ~Pelicula();
    void setNumPeli(int);
    int getNumPeli();
    void setTitulo(string);
    string getTitulo();
    void setAnio(int);
    int getAnio();
    void setDuracion(int);
    int getDuracion();
    void setGenero(string);
    string getGenero();
    int getCantActores();
    bool addListaActores(Actor);//error aqui
    Actor getListaActores(int);
};

Pelicula::Pelicula()
{
    numPeli=00;
    titulo="Default";
    anio=00;
    duracion=00;
    genero="Default";
    cantActores=0;
    int id1=0;
    string nombreActores="Default";
    Actor _listaActores[10];
    
    
    for (int i=0; i>10;i++)
    {
          _listaActores[i].setId(id1);
          _listaActores[i].setNombre(nombreActores);

          listaActores[i]=_listaActores[i];
    }

}

Pelicula::~Pelicula(){
}

void Pelicula::setNumPeli(int __numpeli)
{
  numPeli=__numpeli;
}
int Pelicula::getNumPeli()
{
  return numPeli;
}

void Pelicula::setTitulo(string __titulo)
{
  titulo=__titulo;
}
string Pelicula::getTitulo()
{
  return titulo;
}

void Pelicula::setAnio(int __anio)
{
  anio=__anio;
}
int Pelicula::getAnio()
{
  return anio;
}

void Pelicula::setDuracion(int __duracion)
{
  duracion=__duracion;
}
int Pelicula::getDuracion()
{
  return duracion;
}

void Pelicula::setGenero(string __genero)
{
  genero=__genero;
}
string Pelicula::getGenero()
{
  return genero;
}


int Pelicula::getCantActores()
{
  int asignador=-1;
  for (int i=0; i<10; )
    {
      asignador= listaActores[i].getId();
      if (asignador==0)// BUSCAR ESPACIO DISPONIBLE
      {
          cantActores=i;
          return cantActores;
      } 
      else
      {
        i++;
        asignador=-1;
      }
    }
    cantActores=10;
  return cantActores;
}

bool Pelicula::addListaActores(Actor actorin)
{
  if (getListaActores(9).getId()!=0)//que sean 10
  {
      cout <<"lista llena"<<endl;
      return false;
  }
  for(int i=0;i<10;i++)
  { 
    if (getListaActores(i).getId()==actorin.getId() && (getListaActores(i).getId()!=0))//que sean duplicad.
    {
      cout <<"duplicados"<<endl;
      return false;
    }
    if (getListaActores(i).getId()==0)
    {
      listaActores[i]=actorin;
      return true;
    }

  }

}


Actor Pelicula::getListaActores(int _subIndice)
{
  return listaActores[_subIndice];
}
